#!/usr/bin/env bash
# ==========================================================
#  git-export-changes
# ----------------------------------------------------------
#  Description : Export files changed since a given commit.
#  Author      : Anselmo Barbosa
#  Version     : 1.0.0
#  License     : MIT
#  Repository  : https://github.com/anselmobarbosa/git-export-changes
# ----------------------------------------------------------
#  Features:
#   - Export files modified since a commit
#   - Preserve directory structure
#   - Optional ZIP packaging (--zip)
#   - Safe and idempotent (no overwrite outside repo)
# ==========================================================

set -e

usage() {
    echo ""
    echo "Use: git-export-changes --from <commit_hash> --out <output_dir> [--zip]"
    echo ""
    echo "Examples:"
    echo "  git-export-changes --from a1b2c3d --out ../ftp_upload"
    echo "  git-export-changes --from a1b2c3d --out ../ftp_upload --zip"
    echo ""
    exit 1
}

ZIP_ENABLED=false

# --- Parse arguments ---
while [[ $# -gt 0 ]]; do
    case "$1" in
        --from)
            FROM_HASH="$2"
            shift 2
            ;;
        --out)
            OUT_DIR="$2"
            shift 2
            ;;
        --zip)
            ZIP_ENABLED=true
            shift 1
            ;;
        *)
            usage
            ;;
    esac
done

# --- Validate arguments ---
if [ -z "$FROM_HASH" ] || [ -z "$OUT_DIR" ]; then
    usage
fi

if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    echo "Git repository not found."
    exit 1
fi

if ! git cat-file -e "$FROM_HASH" 2>/dev/null; then
    echo "Commit '$FROM_HASH' not found in this repository."
    exit 1
fi

# --- Prepare environment ---
COMMIT_DATE=$(git show -s --format=%ci "$FROM_HASH" | cut -d' ' -f1)
BASE_DIR=$(git rev-parse --show-toplevel 2>/dev/null)
mkdir -p "$OUT_DIR"

echo "Searching for files modified since $COMMIT_DATE..."

FILES=$(git log --since="$COMMIT_DATE" --name-only --pretty=format: | sort -u)

if [ -z "$FILES" ]; then
    echo "No files modified since $COMMIT_DATE."
    exit 0
fi

# --- Copy modified files ---
echo "Copying files to $OUT_DIR..."

git log --since="$COMMIT_DATE" --name-only --pretty=format: | sort -u | while IFS= read -r file; do
    [ -z "$file" ] && continue

    SOURCE_FILE="$BASE_DIR/$file"

    if [ -f "$SOURCE_FILE" ]; then
        mkdir -p "$OUT_DIR/$(dirname "$file")"
        cp "$SOURCE_FILE" "$OUT_DIR/$file"
        echo "Copied: $file"
    else
        echo "Not found: $SOURCE_FILE"
    fi
done

# --- Generate ZIP (optional) ---
if [ "$ZIP_ENABLED" = true ]; then
    ZIP_FILE="${OUT_DIR%/}.zip"
    echo ""
    echo "Generating zip file..."
    (cd "$(dirname "$OUT_DIR")" && zip -r "$(basename "$ZIP_FILE")" "$(basename "$OUT_DIR")" > /dev/null)
    echo "ZIP created: $ZIP_FILE"
    echo ""
    echo "ZIP file: $ZIP_FILE"
fi

echo ""
echo "Export completed!"
